services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    environment:
      - APP_ENV=${ENVIRONMENT}
      - SITE_URL=${SITE_URL}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_SECRET=${REDDIT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - REDIS_URL=${REDIS_URL}
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${DOCKER_PORT_FRONTEND}:80"
    volumes:
      - ./database:/app/database
    depends_on:
      - mysql
      - redis
    env_file:
      - .env

  # backend:
  #   build:
  #     context: ./backend
  #   container_name: backend
  #   restart: always
  #   environment:
  #     - NODE_ENV=${ENVIRONMENT}
  #     - SITE_URL=${SITE_URL}
  #     - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
  #     - REDDIT_SECRET=${REDDIT_SECRET}
  #     - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
  #     - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
  #     - MYSQL_HOST=mysql
  #     - MYSQL_USER=${MYSQL_USER}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #     - MYSQL_DATABASE=${MYSQL_DATABASE}
  #   ports:
  #     - "${DOCKER_PORT_BACKEND}:${BACKEND_INTERNAL_PORT}"
  #   depends_on:
  #     - mysql
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./database:/app/database

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    command: ["redis-server", "--save", "", "--appendonly", "no", "--maxmemory", "8gb", "--maxmemory-policy", "volatile-lru"]
    ports:
      - "6379:6379"

volumes:
  mysql_data:
